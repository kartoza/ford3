#
# Production server with UWSGI configured to run on port 8080
# and web configured to run directly on port 80
#
# docker-compose build
# docker-compose up -d web
#
# See accompanying Make commands for easy collectstatic etc.

version: '2'
services:
  smtp:
    image: catatnight/postfix
    environment:
      # You could change this to something more suitable
      - maildomain=kartoza.com
      - smtp_user=noreply:docker
    restart: unless-stopped

  db:
    image: kartoza/postgis:9.6-2.4
    volumes:
      # db volume mount can be overridden in docker-compose.override.yml
#      - ./pg/postgres_data:/var/lib/postgresql
      - ./backups:/backups
    environment:
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      # Postgres env var. For postgres CLI shortcut
      - PGUSER=docker
      - PGPASSWORD=docker
      - PGHOST=localhost
    restart: unless-stopped
  #  Overrides the next line in docker-compose.override.yml
  #  to have an access with PGAdmin using localhost and port 25432 on your
  #  computer. Only for development !
  #  ports:
  #    - "25432:5432"

# This is to build the base image (production)
  base_uwsgi:
    build: docker
    image: ford3_uwsgi

  uwsgi:
    image: ford3_uwsgi
    working_dir: /home/web/django_project
    environment:
      - PYTHONPATH=/home/web/django_project
      - DATABASE_NAME=gis
      - DATABASE_USERNAME=docker
      - DATABASE_PASSWORD=docker
      - DATABASE_HOST=db
      - DJANGO_SETTINGS_MODULE=core.settings.prod_docker
      - VIRTUAL_HOST=ford3.kartoza.com
      - VIRTUAL_PORT=8080
    volumes:
      - ../django_project:/home/web/django_project
      - ./static:/home/web/static:rw
      - ./media:/home/web/media:rw
      - ./logs:/var/log/
    links:
      - smtp:smtp
      - db:db
    restart: unless-stopped

  dbbackups:
    image: kartoza/pg-backup:9.6
    entrypoint: []
    command: ["/start.sh"]
    volumes:
      - ./backups:/backups
    links:
      - db:db
    environment:
      # take care to let the project name below match that
      # declared in the top of the makefile
      - DUMPPREFIX=PG_ford3
      # These are all defaults anyway, but setting explicitly in
      # case we ever want to ever use different credentials
      - PGUSER=docker
      - PGPASSWORD=docker
      - PGPORT=5432
      - PGHOST=db
      - PGDATABASE=gis
    restart: unless-stopped

  # This is normally the main entry point for a production server
  web:
    image: nginx
    volumes:
      # Mount production nginx conf to use uwsgi.
      # Mount development nginx conf to use django manage.py runserver
      # Dev conf can be overridden in docker-compose.override.yml
#      - ./sites-enabled/dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./sites-enabled/prod.conf:/etc/nginx/conf.d/default.conf:ro
      # I dont use volumes_from as I want to use the ro modifier
      - ./static:/home/web/static:ro
      - ./media:/home/web/media:ro
      - ./logs:/var/log/nginx
    links:
      - uwsgi:uwsgi
    ports:
      # You can overrides port mapping in docker-compose.override.yml
      - "80:80"
    restart: unless-stopped

  btsync-db:
    # BTSync backups for database dumps
    image: kartoza/btsync
    volumes:
      # We mount RW so that we can use remove peer to clean up old backups off the server
      - ./backups:/web:rw
    # Btsync secret is configured in docker-compose.override.yml

  btsync-media:
    # BTSync backups for django media
    image: kartoza/btsync
    volumes:
      # We mount RO as we do not really want peers to change this data
      - ./media:/web:ro
    # Btsync secret is configured in docker-compose.override.yml


